---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: monitoring
spec:
  mode: deployment
  serviceAccount: otel-collector-opentelemetry-collector
  env:
    # Needed for the kubelet-stats-receiver, as it needs to know the node name
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
      k8s_cluster:
        auth_type: serviceAccount
        collection_interval: 10s
      kubeletstats:
        auth_type: serviceAccount
        collection_interval: 10s
        initial_delay: 1s
        endpoint: "https://${env:K8S_NODE_NAME}:10250"
        insecure_skip_verify: true

    exporters:
      prometheusremotewrite:
        endpoint: "http://kube-prometheus-stack-prometheus.monitoring:9090/api/v1/write"
        resource_to_telemetry_conversion:
          enabled: true # Convert resource attributes to metric labels

    processors:
      batch:
      metricstransform:
        transforms:
          - include: .*
            match_type: regexp
            action: update
            operations:
              - action: add_label
                new_label: deployment
                new_value: green
      k8sattributes:
        auth_type: serviceAccount
        passthrough: false
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: connection

    extensions:

    service:
      telemetry:
        logs:
          level: debug
      extensions:
      pipelines:
        # This pipeline collects metrics from the WarehouseManager app
        metrics/warehousemanager:
          receivers: [otlp]
          processors: [k8sattributes, metricstransform, batch]
          exporters: [prometheusremotewrite]
        # This pipeline collects cluster level metrics
        metrics/cluster:
          receivers: [k8s_cluster, kubeletstats]
          processors: [batch]
          exporters: [prometheusremotewrite]

